# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@HAVE_MUSICBRAINZ_TRUE@am__append_1 = $(MUSICBRAINZ_LIBS)
@HAVE_MUSICBRAINZ_TRUE@am__append_2 = $(MUSICBRAINZ_CFLAGS)
@HAVE_MUSICBRAINZ3_TRUE@am__append_3 = $(MUSICBRAINZ3_LIBS)
@HAVE_MUSICBRAINZ3_TRUE@am__append_4 = $(MUSICBRAINZ3_CFLAGS)
@HAVE_SJ_METADATA_GETTER_TRUE@am__append_5 = \
@HAVE_SJ_METADATA_GETTER_TRUE@	sj-metadata.h sj-metadata.c						\
@HAVE_SJ_METADATA_GETTER_TRUE@	sj-metadata-getter.c sj-metadata-getter.h				\
@HAVE_SJ_METADATA_GETTER_TRUE@	sj-metadata-gvfs.c sj-metadata-gvfs.h					\
@HAVE_SJ_METADATA_GETTER_TRUE@	sj-structures.h sj-structures.c						\
@HAVE_SJ_METADATA_GETTER_TRUE@	sj-error.h sj-error.c							\
@HAVE_SJ_METADATA_GETTER_TRUE@	$(MARSHALFILES)

@HAVE_MUSICBRAINZ_TRUE@@HAVE_SJ_METADATA_GETTER_TRUE@am__append_6 = sj-metadata-musicbrainz.c sj-metadata-musicbrainz.h
@HAVE_MUSICBRAINZ3_TRUE@@HAVE_SJ_METADATA_GETTER_TRUE@am__append_7 = sj-metadata-musicbrainz3.c sj-metadata-musicbrainz3.h
@HAVE_SJ_METADATA_GETTER_TRUE@am__append_8 = sj-metadata-marshal.h sj-metadata-marshal.c
subdir = plugins/audiocd
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/gnome-doc-utils.m4 \
	$(top_srcdir)/macros/gtk-doc.m4 \
	$(top_srcdir)/macros/intltool.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(plugindir)" \
	"$(DESTDIR)$(gtkbuilderdir)" "$(DESTDIR)$(plugindir)" \
	"$(DESTDIR)$(uixmldir)"
LTLIBRARIES = $(plugin_LTLIBRARIES)
am__DEPENDENCIES_1 =
@HAVE_MUSICBRAINZ_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@HAVE_MUSICBRAINZ3_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
libaudiocd_la_DEPENDENCIES =  \
	$(top_builddir)/shell/librhythmbox-core.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3)
am__libaudiocd_la_SOURCES_DIST = rb-audiocd-plugin.c \
	rb-audiocd-source.c rb-audiocd-source.h sj-metadata.h \
	sj-metadata.c sj-metadata-getter.c sj-metadata-getter.h \
	sj-metadata-gvfs.c sj-metadata-gvfs.h sj-structures.h \
	sj-structures.c sj-error.h sj-error.c sj-metadata-marshal.h \
	sj-metadata-marshal.c sj-metadata-musicbrainz.c \
	sj-metadata-musicbrainz.h sj-metadata-musicbrainz3.c \
	sj-metadata-musicbrainz3.h
@HAVE_SJ_METADATA_GETTER_TRUE@am__objects_1 = libaudiocd_la-sj-metadata-marshal.lo
am__objects_2 = $(am__objects_1)
@HAVE_SJ_METADATA_GETTER_TRUE@am__objects_3 =  \
@HAVE_SJ_METADATA_GETTER_TRUE@	libaudiocd_la-sj-metadata.lo \
@HAVE_SJ_METADATA_GETTER_TRUE@	libaudiocd_la-sj-metadata-getter.lo \
@HAVE_SJ_METADATA_GETTER_TRUE@	libaudiocd_la-sj-metadata-gvfs.lo \
@HAVE_SJ_METADATA_GETTER_TRUE@	libaudiocd_la-sj-structures.lo \
@HAVE_SJ_METADATA_GETTER_TRUE@	libaudiocd_la-sj-error.lo \
@HAVE_SJ_METADATA_GETTER_TRUE@	$(am__objects_2)
@HAVE_MUSICBRAINZ_TRUE@@HAVE_SJ_METADATA_GETTER_TRUE@am__objects_4 = libaudiocd_la-sj-metadata-musicbrainz.lo
@HAVE_MUSICBRAINZ3_TRUE@@HAVE_SJ_METADATA_GETTER_TRUE@am__objects_5 = libaudiocd_la-sj-metadata-musicbrainz3.lo
am_libaudiocd_la_OBJECTS = libaudiocd_la-rb-audiocd-plugin.lo \
	libaudiocd_la-rb-audiocd-source.lo $(am__objects_3) \
	$(am__objects_4) $(am__objects_5)
libaudiocd_la_OBJECTS = $(am_libaudiocd_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libaudiocd_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) $(libaudiocd_la_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libaudiocd_la_SOURCES)
DIST_SOURCES = $(am__libaudiocd_la_SOURCES_DIST)
DATA = $(gtkbuilder_DATA) $(plugin_DATA) $(uixml_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AVAHI_CFLAGS = @AVAHI_CFLAGS@
AVAHI_LIBS = @AVAHI_LIBS@
AWK = @AWK@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHECK_CFLAGS = @CHECK_CFLAGS@
CHECK_LIBS = @CHECK_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DBUS_CFLAGS = @DBUS_CFLAGS@
DBUS_GLIB_BIN = @DBUS_GLIB_BIN@
DBUS_LIBS = @DBUS_LIBS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISABLE_DEPRECATED = @DISABLE_DEPRECATED@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DOC_USER_FORMATS = @DOC_USER_FORMATS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GDK_PIXBUF_CSOURCE = @GDK_PIXBUF_CSOURCE@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_KEYRING_CFLAGS = @GNOME_KEYRING_CFLAGS@
GNOME_KEYRING_LIBS = @GNOME_KEYRING_LIBS@
GREP = @GREP@
GSTCDDA_CFLAGS = @GSTCDDA_CFLAGS@
GSTCDDA_LIBS = @GSTCDDA_LIBS@
GSTREAMER_0_10_CFLAGS = @GSTREAMER_0_10_CFLAGS@
GSTREAMER_0_10_LIBS = @GSTREAMER_0_10_LIBS@
GST_PYTHON_DEFSDIR = @GST_PYTHON_DEFSDIR@
GTKDOC_CHECK = @GTKDOC_CHECK@
GTKDOC_MKPDF = @GTKDOC_MKPDF@
GTKDOC_REBASE = @GTKDOC_REBASE@
GUDEV_CFLAGS = @GUDEV_CFLAGS@
GUDEV_LIBS = @GUDEV_LIBS@
HAL_CFLAGS = @HAL_CFLAGS@
HAL_LIBS = @HAL_LIBS@
HAVE_LIBBRASERO_MEDIA = @HAVE_LIBBRASERO_MEDIA@
HAVE_NAUTILUS_BURN = @HAVE_NAUTILUS_BURN@
HELP_DIR = @HELP_DIR@
HTML_DIR = @HTML_DIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
IPOD_CFLAGS = @IPOD_CFLAGS@
IPOD_LIBS = @IPOD_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBBRASERO_MEDIA_CFLAGS = @LIBBRASERO_MEDIA_CFLAGS@
LIBBRASERO_MEDIA_LIBS = @LIBBRASERO_MEDIA_LIBS@
LIBNAUTILUS_BURN_CFLAGS = @LIBNAUTILUS_BURN_CFLAGS@
LIBNAUTILUS_BURN_LIBS = @LIBNAUTILUS_BURN_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MDNS_CFLAGS = @MDNS_CFLAGS@
MDNS_LIBS = @MDNS_LIBS@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MOZILLA_PLUGINDIR = @MOZILLA_PLUGINDIR@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGMERGE = @MSGMERGE@
MTP_CFLAGS = @MTP_CFLAGS@
MTP_LIBS = @MTP_LIBS@
MUSICBRAINZ3_CFLAGS = @MUSICBRAINZ3_CFLAGS@
MUSICBRAINZ3_LIBS = @MUSICBRAINZ3_LIBS@
MUSICBRAINZ_CFLAGS = @MUSICBRAINZ_CFLAGS@
MUSICBRAINZ_LIBS = @MUSICBRAINZ_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
NOTIFY_CFLAGS = @NOTIFY_CFLAGS@
NOTIFY_LIBS = @NOTIFY_LIBS@
NO_STRICT_ALIASING_CFLAGS = @NO_STRICT_ALIASING_CFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OMF_DIR = @OMF_DIR@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PLUGINDIR = @PLUGINDIR@
PLUGIN_LIBTOOL_FLAGS = @PLUGIN_LIBTOOL_FLAGS@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
PYGTK_CFLAGS = @PYGTK_CFLAGS@
PYGTK_CODEGEN = @PYGTK_CODEGEN@
PYGTK_DEFSDIR = @PYGTK_DEFSDIR@
PYGTK_H2DEF = @PYGTK_H2DEF@
PYGTK_LIBS = @PYGTK_LIBS@
PYTHON = @PYTHON@
PYTHON_CFLAGS = @PYTHON_CFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_LIB_LOC = @PYTHON_LIB_LOC@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
RB_CLIENT_CFLAGS = @RB_CLIENT_CFLAGS@
RB_CLIENT_LIBS = @RB_CLIENT_LIBS@
RHYTHMBOX_CFLAGS = @RHYTHMBOX_CFLAGS@
RHYTHMBOX_LIBS = @RHYTHMBOX_LIBS@
ROOT_UNINSTALLED_DIR = @ROOT_UNINSTALLED_DIR@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOTEM_PLPARSER_CFLAGS = @TOTEM_PLPARSER_CFLAGS@
TOTEM_PLPARSER_LIBS = @TOTEM_PLPARSER_LIBS@
USE_NLS = @USE_NLS@
VALAC = @VALAC@
VALA_CFLAGS = @VALA_CFLAGS@
VALA_LIBS = @VALA_LIBS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
WNOERROR_CFLAGS = @WNOERROR_CFLAGS@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
plugindir = $(PLUGINDIR)/audiocd
plugin_LTLIBRARIES = libaudiocd.la
libaudiocd_la_SOURCES = rb-audiocd-plugin.c rb-audiocd-source.c \
	rb-audiocd-source.h $(am__append_5) $(am__append_6) \
	$(am__append_7)
libaudiocd_la_LDFLAGS = $(PLUGIN_LIBTOOL_FLAGS)
libaudiocd_la_LIBTOOLFLAGS = --tag=disable-static
libaudiocd_la_LIBADD = $(top_builddir)/shell/librhythmbox-core.la \
	$(TOTEM_PLPARSER_LIBS) $(GSTCDDA_LIBS) $(am__append_1) \
	$(am__append_3) $(NULL)
INCLUDES = -DGNOMELOCALEDIR=\""$(datadir)/locale"\" \
	-DG_LOG_DOMAIN=\"Rhythmbox\" -I$(top_srcdir) \
	-I$(top_srcdir)/lib -I$(top_srcdir)/lib/libmediaplayerid \
	-I$(top_srcdir)/metadata -I$(top_srcdir)/player \
	-I$(top_srcdir)/rhythmdb -I$(top_srcdir)/widgets \
	-I$(top_srcdir)/sources -I$(top_srcdir)/iradio \
	-I$(top_srcdir)/podcast -I$(top_srcdir)/remote \
	-I$(top_builddir)/remote -I$(top_srcdir)/plugins \
	-I$(top_srcdir)/shell -I$(top_srcdir)/backends \
	-DPIXMAP_DIR=\""$(datadir)/pixmaps"\" \
	-DSHARE_DIR=\"$(pkgdatadir)\" -DDATADIR=\""$(datadir)"\" \
	$(TOTEM_PLPARSER_CFLAGS) $(RHYTHMBOX_CFLAGS) $(GSTCDDA_CFLAGS) \
	-DUSE_TOTEM_PL_PARSER -D_XOPEN_SOURCE -D_BSD_SOURCE \
	$(am__append_2) $(am__append_4)
gtkbuilderdir = $(plugindir)
gtkbuilder_DATA = \
	album-info.ui					\
	multiple-album.ui

uixmldir = $(plugindir)
uixml_DATA = audiocd-ui.xml
plugin_in_files = audiocd.rb-plugin.in
plugin_DATA = $(plugin_in_files:.rb-plugin.in=.rb-plugin)
EXTRA_DIST = $(gtkbuilder_DATA) $(uixml_DATA) $(plugin_in_files) sj-metadata-marshal.list
SJ_FILES = \
	sj-error.c sj-error.h							\
	sj-metadata.c sj-metadata.h						\
	sj-metadata-gvfs.c sj-metadata-gvfs.h					\
	sj-metadata-getter.c sj-metadata-getter.h				\
	sj-metadata-musicbrainz3.c sj-metadata-musicbrainz3.h			\
	sj-metadata-musicbrainz.c sj-metadata-musicbrainz.h			\
	sj-structures.c sj-structures.h						\
	sj-metadata-marshal.list

EGGDIR = $(srcdir)/../../../sound-juicer/libjuicer
MARSHALFILES = $(am__append_8)
BUILT_SOURCES = $(MARSHALFILES)
CLEANFILES = $(plugin_DATA) $(BUILT_SOURCES)
DISTCLEANFILES = $(plugin_DATA)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu plugins/audiocd/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu plugins/audiocd/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(plugindir)" || $(MKDIR_P) "$(DESTDIR)$(plugindir)"
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(plugindir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(plugindir)"; \
	}

uninstall-pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(plugindir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(plugindir)/$$f"; \
	done

clean-pluginLTLIBRARIES:
	-test -z "$(plugin_LTLIBRARIES)" || rm -f $(plugin_LTLIBRARIES)
	@list='$(plugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libaudiocd.la: $(libaudiocd_la_OBJECTS) $(libaudiocd_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libaudiocd_la_LINK) -rpath $(plugindir) $(libaudiocd_la_OBJECTS) $(libaudiocd_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-rb-audiocd-plugin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-rb-audiocd-source.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-sj-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-sj-metadata-getter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-sj-metadata-gvfs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-sj-metadata-marshal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-sj-metadata-musicbrainz.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-sj-metadata-musicbrainz3.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-sj-metadata.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudiocd_la-sj-structures.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libaudiocd_la-rb-audiocd-plugin.lo: rb-audiocd-plugin.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-rb-audiocd-plugin.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-rb-audiocd-plugin.Tpo -c -o libaudiocd_la-rb-audiocd-plugin.lo `test -f 'rb-audiocd-plugin.c' || echo '$(srcdir)/'`rb-audiocd-plugin.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-rb-audiocd-plugin.Tpo $(DEPDIR)/libaudiocd_la-rb-audiocd-plugin.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='rb-audiocd-plugin.c' object='libaudiocd_la-rb-audiocd-plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-rb-audiocd-plugin.lo `test -f 'rb-audiocd-plugin.c' || echo '$(srcdir)/'`rb-audiocd-plugin.c

libaudiocd_la-rb-audiocd-source.lo: rb-audiocd-source.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-rb-audiocd-source.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-rb-audiocd-source.Tpo -c -o libaudiocd_la-rb-audiocd-source.lo `test -f 'rb-audiocd-source.c' || echo '$(srcdir)/'`rb-audiocd-source.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-rb-audiocd-source.Tpo $(DEPDIR)/libaudiocd_la-rb-audiocd-source.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='rb-audiocd-source.c' object='libaudiocd_la-rb-audiocd-source.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-rb-audiocd-source.lo `test -f 'rb-audiocd-source.c' || echo '$(srcdir)/'`rb-audiocd-source.c

libaudiocd_la-sj-metadata.lo: sj-metadata.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-sj-metadata.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-sj-metadata.Tpo -c -o libaudiocd_la-sj-metadata.lo `test -f 'sj-metadata.c' || echo '$(srcdir)/'`sj-metadata.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-sj-metadata.Tpo $(DEPDIR)/libaudiocd_la-sj-metadata.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-metadata.c' object='libaudiocd_la-sj-metadata.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-sj-metadata.lo `test -f 'sj-metadata.c' || echo '$(srcdir)/'`sj-metadata.c

libaudiocd_la-sj-metadata-getter.lo: sj-metadata-getter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-sj-metadata-getter.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-sj-metadata-getter.Tpo -c -o libaudiocd_la-sj-metadata-getter.lo `test -f 'sj-metadata-getter.c' || echo '$(srcdir)/'`sj-metadata-getter.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-sj-metadata-getter.Tpo $(DEPDIR)/libaudiocd_la-sj-metadata-getter.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-metadata-getter.c' object='libaudiocd_la-sj-metadata-getter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-sj-metadata-getter.lo `test -f 'sj-metadata-getter.c' || echo '$(srcdir)/'`sj-metadata-getter.c

libaudiocd_la-sj-metadata-gvfs.lo: sj-metadata-gvfs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-sj-metadata-gvfs.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-sj-metadata-gvfs.Tpo -c -o libaudiocd_la-sj-metadata-gvfs.lo `test -f 'sj-metadata-gvfs.c' || echo '$(srcdir)/'`sj-metadata-gvfs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-sj-metadata-gvfs.Tpo $(DEPDIR)/libaudiocd_la-sj-metadata-gvfs.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-metadata-gvfs.c' object='libaudiocd_la-sj-metadata-gvfs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-sj-metadata-gvfs.lo `test -f 'sj-metadata-gvfs.c' || echo '$(srcdir)/'`sj-metadata-gvfs.c

libaudiocd_la-sj-structures.lo: sj-structures.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-sj-structures.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-sj-structures.Tpo -c -o libaudiocd_la-sj-structures.lo `test -f 'sj-structures.c' || echo '$(srcdir)/'`sj-structures.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-sj-structures.Tpo $(DEPDIR)/libaudiocd_la-sj-structures.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-structures.c' object='libaudiocd_la-sj-structures.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-sj-structures.lo `test -f 'sj-structures.c' || echo '$(srcdir)/'`sj-structures.c

libaudiocd_la-sj-error.lo: sj-error.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-sj-error.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-sj-error.Tpo -c -o libaudiocd_la-sj-error.lo `test -f 'sj-error.c' || echo '$(srcdir)/'`sj-error.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-sj-error.Tpo $(DEPDIR)/libaudiocd_la-sj-error.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-error.c' object='libaudiocd_la-sj-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-sj-error.lo `test -f 'sj-error.c' || echo '$(srcdir)/'`sj-error.c

libaudiocd_la-sj-metadata-marshal.lo: sj-metadata-marshal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-sj-metadata-marshal.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-sj-metadata-marshal.Tpo -c -o libaudiocd_la-sj-metadata-marshal.lo `test -f 'sj-metadata-marshal.c' || echo '$(srcdir)/'`sj-metadata-marshal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-sj-metadata-marshal.Tpo $(DEPDIR)/libaudiocd_la-sj-metadata-marshal.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-metadata-marshal.c' object='libaudiocd_la-sj-metadata-marshal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-sj-metadata-marshal.lo `test -f 'sj-metadata-marshal.c' || echo '$(srcdir)/'`sj-metadata-marshal.c

libaudiocd_la-sj-metadata-musicbrainz.lo: sj-metadata-musicbrainz.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-sj-metadata-musicbrainz.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-sj-metadata-musicbrainz.Tpo -c -o libaudiocd_la-sj-metadata-musicbrainz.lo `test -f 'sj-metadata-musicbrainz.c' || echo '$(srcdir)/'`sj-metadata-musicbrainz.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-sj-metadata-musicbrainz.Tpo $(DEPDIR)/libaudiocd_la-sj-metadata-musicbrainz.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-metadata-musicbrainz.c' object='libaudiocd_la-sj-metadata-musicbrainz.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-sj-metadata-musicbrainz.lo `test -f 'sj-metadata-musicbrainz.c' || echo '$(srcdir)/'`sj-metadata-musicbrainz.c

libaudiocd_la-sj-metadata-musicbrainz3.lo: sj-metadata-musicbrainz3.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libaudiocd_la-sj-metadata-musicbrainz3.lo -MD -MP -MF $(DEPDIR)/libaudiocd_la-sj-metadata-musicbrainz3.Tpo -c -o libaudiocd_la-sj-metadata-musicbrainz3.lo `test -f 'sj-metadata-musicbrainz3.c' || echo '$(srcdir)/'`sj-metadata-musicbrainz3.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudiocd_la-sj-metadata-musicbrainz3.Tpo $(DEPDIR)/libaudiocd_la-sj-metadata-musicbrainz3.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-metadata-musicbrainz3.c' object='libaudiocd_la-sj-metadata-musicbrainz3.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(libaudiocd_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libaudiocd_la-sj-metadata-musicbrainz3.lo `test -f 'sj-metadata-musicbrainz3.c' || echo '$(srcdir)/'`sj-metadata-musicbrainz3.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-gtkbuilderDATA: $(gtkbuilder_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkbuilderdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkbuilderdir)"
	@list='$(gtkbuilder_DATA)'; test -n "$(gtkbuilderdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkbuilderdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkbuilderdir)" || exit $$?; \
	done

uninstall-gtkbuilderDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkbuilder_DATA)'; test -n "$(gtkbuilderdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkbuilderdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkbuilderdir)" && rm -f $$files
install-pluginDATA: $(plugin_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(plugindir)" || $(MKDIR_P) "$(DESTDIR)$(plugindir)"
	@list='$(plugin_DATA)'; test -n "$(plugindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(plugindir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(plugindir)" || exit $$?; \
	done

uninstall-pluginDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(plugin_DATA)'; test -n "$(plugindir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(plugindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(plugindir)" && rm -f $$files
install-uixmlDATA: $(uixml_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(uixmldir)" || $(MKDIR_P) "$(DESTDIR)$(uixmldir)"
	@list='$(uixml_DATA)'; test -n "$(uixmldir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(uixmldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(uixmldir)" || exit $$?; \
	done

uninstall-uixmlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(uixml_DATA)'; test -n "$(uixmldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(uixmldir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(uixmldir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(gtkbuilderdir)" "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(uixmldir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-pluginLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-gtkbuilderDATA install-pluginDATA \
	install-pluginLTLIBRARIES install-uixmlDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-gtkbuilderDATA uninstall-pluginDATA \
	uninstall-pluginLTLIBRARIES uninstall-uixmlDATA

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-pluginLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am \
	install-gtkbuilderDATA install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-pluginDATA install-pluginLTLIBRARIES \
	install-ps install-ps-am install-strip install-uixmlDATA \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-gtkbuilderDATA \
	uninstall-pluginDATA uninstall-pluginLTLIBRARIES \
	uninstall-uixmlDATA


%.rb-plugin: %.rb-plugin.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*po) ; $(INTLTOOL_MERGE) $(top_srcdir)/po $< $@ -d -u -c $(top_builddir)/po/.intltool-merge-cache
regenerate-built-sources:
	EGGFILES="$(SJ_FILES)" EGGDIR="$(EGGDIR)" $(srcdir)/update-from-egg.sh || true

@HAVE_SJ_METADATA_GETTER_TRUE@sj-metadata-marshal.h: sj-metadata-marshal.list
@HAVE_SJ_METADATA_GETTER_TRUE@	( $(GLIB_GENMARSHAL) --prefix=metadata_marshal $< \
@HAVE_SJ_METADATA_GETTER_TRUE@	--header > marshal-header.tmp \
@HAVE_SJ_METADATA_GETTER_TRUE@	&& mv marshal-header.tmp $@ ) \
@HAVE_SJ_METADATA_GETTER_TRUE@	|| ( rm -f marshal-header.tmp && exit 1 )

@HAVE_SJ_METADATA_GETTER_TRUE@sj-metadata-marshal.c: sj-metadata-marshal.list
@HAVE_SJ_METADATA_GETTER_TRUE@	( $(GLIB_GENMARSHAL) --prefix=metadata_marshal $< \
@HAVE_SJ_METADATA_GETTER_TRUE@	--body > marshal-source.tmp \
@HAVE_SJ_METADATA_GETTER_TRUE@	&& echo "#include \"sj-metadata-marshal.h\"" > $@ \
@HAVE_SJ_METADATA_GETTER_TRUE@	&& cat marshal-source.tmp >> $@ \
@HAVE_SJ_METADATA_GETTER_TRUE@	&& rm -f marshal-source.tmp ) \
@HAVE_SJ_METADATA_GETTER_TRUE@	|| ( rm -f marshal-source.tmp && exit 1 )

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
